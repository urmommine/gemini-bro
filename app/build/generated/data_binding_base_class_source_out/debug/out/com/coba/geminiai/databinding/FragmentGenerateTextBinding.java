// Generated by view binder compiler. Do not edit!
package com.coba.geminiai.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.coba.geminiai.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentGenerateTextBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialButton btnCopy;

  @NonNull
  public final TextInputEditText inputSearch;

  @NonNull
  public final LinearLayout linearInput;

  @NonNull
  public final TextView tvResult;

  private FragmentGenerateTextBinding(@NonNull RelativeLayout rootView,
      @NonNull MaterialButton btnCopy, @NonNull TextInputEditText inputSearch,
      @NonNull LinearLayout linearInput, @NonNull TextView tvResult) {
    this.rootView = rootView;
    this.btnCopy = btnCopy;
    this.inputSearch = inputSearch;
    this.linearInput = linearInput;
    this.tvResult = tvResult;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentGenerateTextBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentGenerateTextBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_generate_text, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentGenerateTextBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCopy;
      MaterialButton btnCopy = ViewBindings.findChildViewById(rootView, id);
      if (btnCopy == null) {
        break missingId;
      }

      id = R.id.inputSearch;
      TextInputEditText inputSearch = ViewBindings.findChildViewById(rootView, id);
      if (inputSearch == null) {
        break missingId;
      }

      id = R.id.linearInput;
      LinearLayout linearInput = ViewBindings.findChildViewById(rootView, id);
      if (linearInput == null) {
        break missingId;
      }

      id = R.id.tvResult;
      TextView tvResult = ViewBindings.findChildViewById(rootView, id);
      if (tvResult == null) {
        break missingId;
      }

      return new FragmentGenerateTextBinding((RelativeLayout) rootView, btnCopy, inputSearch,
          linearInput, tvResult);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
